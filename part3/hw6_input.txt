fun makeTuple b
fun lambda1 a
fun lambda2 x
push x
push 0
equal
push x
push 1
equal
push :error:
push b
if
push a
if
return
funEnd
push lambda2
return
funEnd
push lambda1
return
funEnd
pop
fun FROMN n
fun thunk unit
push FROMN
push n
push 1
add
call
return
funEnd
push makeTuple
push thunk
call
push n
call
return
funEnd
pop
fun HD L
push L
push 0
call
return
funEnd
pop
fun TL L
push L
push 1
call
push :unit:
call
return
funEnd
pop
fun NTH L
fun lambda1 n
fun rec unit
push NTH
push TL
push L
call
call
push n
push 1
sub
call
return
funEnd
push n
push 0
equal
push rec
push HD
if
push L
call
return
funEnd
push lambda1
return
funEnd
pop
fun FIB n
fun lambda1 m
fun thunk unit
push FIB
push m
call
push n
push m
add
call
return
funEnd
push makeTuple
push thunk
call
push n
call
return
funEnd
push lambda1
return
funEnd
pop
fun FILTER L
fun lambda1 f
fun thunk unit
push FILTER
push TL
push L
call
call
push f
call
return
funEnd
fun rec unit
push makeTuple
push thunk
call
push HD
push L
call
call
return
funEnd
push f
push HD
push L
call
call
push thunk
push rec
if
push :unit:
call
return
funEnd
push lambda1
return
funEnd
pop
fun ZIP B
fun lambda1 A
fun thunk unit
push ZIP
push TL
push B
call
call
push TL
push A
call
call
return
funEnd
pop
push makeTuple
push thunk
call
push makeTuple
push HD
push B
call
call
push HD
push A
call
call
call
return
funEnd
push lambda1
return
funEnd
pop
fun even n
push n
push 2
rem
push 0
equal
return
funEnd
pop
fun odd n
push n
push 2
rem
push 1
equal
return
funEnd
pop
fun SIFT L
push a
push HD
push L
call
bind
pop
fun aux x
push 0
push x
push a
rem
equal
not
return
funEnd
pop
fun thunk unit
push SIFT
push FILTER
push TL
push L
call
call
push aux
call
call
return
funEnd
pop
push makeTuple
push thunk
call
push a
call
return
funEnd
pop
push FIB
push 0
call
push 1
call
push fibs
swap
bind
pop
push FILTER
push fibs
call
push even
call
push evenFibs
swap
bind
pop
push FILTER
push fibs
call
push odd
call
push oddFibs
swap
bind
pop
push NTH
push ZIP
push oddFibs
call
push evenFibs
call
call
push 10
call
push 0
call
push NTH
push FROMN
push 10
call
call
push 100
call
push NTH
push SIFT
push FROMN
push 2
call
call
call
push 20
call
push NTH
push evenFibs
call
push 10
call
push NTH
push oddFibs
call
push 12
call
push even
push 10
call
push odd
push 3
call
toString
println
toString
println
toString
println
toString
println
toString
println
toString
println
toString
println
quit